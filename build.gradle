plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

apply plugin: 'maven'
apply plugin: 'signing'

jar {
	enabled = true
}

group = 'com.github.noir-lattice'
version = '0.1.0-RELEASE'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/' }
	maven{ url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
	mavenCentral()
}

dependencies {
	implementation "org.redisson:redisson:${redissonVersion}"
	implementation "org.apache.zookeeper:zookeeper:${zookeeperVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}

signing {
	sign configurations.archives
}

javadoc {
	description = "生成jar格式的javadoc。"
	// 只显示 protected 和 public 的类和成员
	options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
	options.author = true
	options.version = true
	options.header = project.name
	// 静默javadoc检查（比如不支持@date会报错等），jdk 8+
	options.addStringOption('Xdoclint:none', '-quiet')
	// 防止本地打开中文乱码
	options.addStringOption("charset", "UTF-8")
	// suppress warnings due to cross-module @see and @link references;
	// note that global 'api' task does display all warnings.
	logging.captureStandardError LogLevel.INFO
	// suppress "## warnings" message
	logging.captureStandardOutput LogLevel.INFO
	// 编码一定要配置否则直接出错
	options.encoding = "UTF-8"
	options.charSet = "UTF-8"
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			pom.project {
				name 'spring-boot-distributed-lock-starter'
				packaging 'jar'
				// optionally artifactId can be defined here
				description 'A distributed lock springboot supports'
				url 'https://github.com/noir-lattice/spring-boot-distributed-lock-starter'

				scm {
					connection 'scm:git:git@github.com:noir-lattice/spring-boot-distributed-lock-starter.git'
					developerConnection 'scm:git:git@github.com:noir-lattice/spring-boot-distributed-lock-starter.git'
					url 'https://github.com/noir-lattice/spring-boot-distributed-lock-starter'
				}

				licenses {
					license {
						name 'The Apache License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}

				developers {
					developer {
						id 'noir'
						name 'noir'
						email '13232297691@163.com'
					}
				}
			}
		}
	}
}
